@model CategoryPostCountModel
@using RtvSlo.Visualization.Models.Home

@{
    ViewBag.Title = "Number of posts by category";
}

<h1>@ViewBag.Title</h1>

<div class="row-fluid">
    @* Sidebar *@
    <div class="span3">
        <div class="well sidebar-nav">
            @using (Html.BeginForm("CategoryPostCount", "Home", FormMethod.Post))
            {
                <p>
                    @Html.LabelFor(x => x.DateFrom)
                    @Html.TextBoxFor(x => x.DateFrom, new { @class = "date-picker" })
                </p>
                <p>
                    @Html.LabelFor(x => x.DateTo)
                    @Html.TextBoxFor(x => x.DateTo, new { @class = "date-picker" })
                </p>
                <p>
                    <input type="submit" class="btn btn-primary" value="Filter" />
                </p>
            }
        </div>
    </div>

    @* Main Content *@
    <div class="span9">
        <p>
            @Html.DisplayNameFor(x => x.DateFrom):
            @Html.DisplayFor(x => x.DateFrom),
            @Html.DisplayNameFor(x => x.DateTo):
            @Html.DisplayFor(x => x.DateTo)
        </p>
        
        <div id="bar-chart"></div>

        <div id="pie-chart"></div>
    </div>
</div>

@section Scripts{
    
    <script type="text/javascript" src="~/Scripts/jqplot/plugins/jqplot.pieRenderer.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jqplot/plugins/jqplot.donutRenderer.min.js"></script>

    <script type="text/javascript" src="~/Scripts/jqplot/plugins/jqplot.barRenderer.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jqplot/plugins/jqplot.categoryAxisRenderer.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jqplot/plugins/jqplot.pointLabels.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function(){
//          var data = [
//            ['Heavy Industry', 12],['Retail', 9], ['Light Industry', 14], 
//            ['Out of home', 16],['Commuting', 7], ['Orientation', 9]];

            var data = @Html.Raw(Model.JsonPie);

          var plot1 = jQuery.jqplot ('pie-chart', [data], 
            { 
              seriesDefaults: {
                // Make this a pie chart.
                renderer: jQuery.jqplot.PieRenderer, 
                rendererOptions: {
                  // Put data labels on the pie slices.
                  // By default, labels show the percentage of the slice.
                  showDataLabels: true
                }
              }, 
              legend: { show:true, location: 'e' }
            }
          );


          var s1 = @Html.Raw(Model.JsonBarCount);
//          var s2 = [460, -210, 690, 820];
//          var s3 = [-260, -440, 320, 200];
          // Can specify a custom tick Array.
          // Ticks should match up one for each y value (category) in the series.
//          var ticks = ['May', 'June', 'July', 'August'];
          var ticks = @Html.Raw(Model.JsonBarCategory);

          var plot2 = $.jqplot('bar-chart', [s1], {
              // The "seriesDefaults" option is an options object that will
              // be applied to all series in the chart.
              seriesDefaults: {
                  renderer: $.jqplot.BarRenderer,
                  rendererOptions: { fillToZero: true }
              },
              // Custom labels for the series are specified with the "label"
              // option on the series option.  Here a series option object
              // is specified for each series.
//              series: [
//                    { label: 'Hotel' },
//                    { label: 'Event Regristration' },
//                    { label: 'Airfare' }
//                ],
              // Show the legend and put it outside the grid, but inside the
              // plot container, shrinking the grid to accomodate the legend.
              // A value of "outside" would not shrink the grid and allow
              // the legend to overflow the container.
//              legend: {
//                  show: true,
//                  placement: 'outsideGrid'
//              },
              axes: {
                  // Use a category axis on the x axis and use our custom ticks.
                  xaxis: {
                      renderer: $.jqplot.CategoryAxisRenderer,
                      ticks: ticks
                  },
                  // Pad the y axis just a little so bars can get close to, but
                  // not touch, the grid boundaries.  1.2 is the default padding.
                  yaxis: {
                      pad: 1.05,
                      tickOptions: { formatString: '%d' }
                  }
              }
          });

        });
    </script>
}
